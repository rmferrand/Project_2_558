---
title: "Project_2_558"
author: "Robbie Ferrand"
format: html
editor: visual
---

### Load in Data, Libraries, and Describe

Load in all necessary libraries

```{r, warning = FALSE, message = FALSE}
library(tidyverse)
library(corrplot)
```

Read in the data and view

Make sure user behavior class is a factor

Add new categorical variable AgeCat

```{r message = FALSE}
mobile_behavior<- read_csv("user_behavior_dataset.csv")
mobile_behavior$`User Behavior Class` <- as.factor(mobile_behavior$`User Behavior Class`)
mobile_behavior$AgeCat <- as.factor(ifelse(mobile_behavior$Age <= 28, 1,
                                  ifelse(mobile_behavior$Age <= 38, 2,
                                         ifelse(mobile_behavior$Age <= 49, 3, 4))))
```

This dataset provides a comprehensive analysis of mobile device usage patterns and user behavior classification. It contains 700 samples of user data, including metrics such as app usage time, screen-on time, battery drain, and data consumption. Each entry is categorized into one of five user behavior classes, ranging from light to extreme usage, allowing for insightful analysis and modeling.

#### Key Features:

-   User ID: Unique identifier for each user.

-   Device Model: Model of the user's smartphone.

-   Operating System: The OS of the device (iOS or Android).

-   App Usage Time: Daily time spent on mobile applications, measured in minutes.

-   Screen On Time: Average hours per day the screen is active.

-   Battery Drain: Daily battery consumption in mAh.

-   Number of Apps Installed: Total apps available on the device.

-   Data Usage: Daily mobile data consumption in megabytes.

-   Age: Age of the user.

-   AgeCat(NEW!): Separates users into Age groups 0-28, 29-38, 39-49, 50+

-   Gender: Gender of the user (Male or Female).

-   User Behavior Class: Classification of user behavior based on usage patterns (1 to 5). Light to extreme usage.

### Categorical Data

#### One-way Contingency Tables

```{r}
table(mobile_behavior$`Operating System`)
table(mobile_behavior$`Device Model`)
table(mobile_behavior$Gender)
table(mobile_behavior$`User Behavior Class`)
```

#### Two-Way Contingency Tables

```{r}
table(mobile_behavior$`Gender`, mobile_behavior$`Operating System`)

table(mobile_behavior$`User Behavior Class`, mobile_behavior$Gender)

table(mobile_behavior$`User Behavior Class`, mobile_behavior$`Operating System`)
```

off the gate, I think we should be able to subset on Operating System, Gender, and User Behavior Class.

### Numerical Data

Calculate Min, Max, Mean, Median, SD, IQR for all numeric variables:

```{r}
#across is.numeric subsets as necessary
numerical_summaries <- mobile_behavior |>
  summarise(across(where(is.numeric), 
    list(
      Min = ~min(. , na.rm = TRUE),
      Max = ~max(. , na.rm = TRUE),
      Mean = ~mean(. , na.rm = TRUE),
      Median = ~median(. , na.rm = TRUE),
      SD = ~sd(. , na.rm = TRUE),
      IQR = ~IQR(. , na.rm = TRUE)), 
      .names = "{.col}_{.fn}")) |>
  pivot_longer(everything(), names_to = c("Variable", ".value"), 
               names_sep = "_") |>
  #slice allows us to remove rows! it's like select but for rows. is numeric doesnt remove all of the columns id like!
  slice(-c(1, 8))

numerical_summaries
```

#### by gender

Calculate Min, Max, Mean, Median, SD, IQR for all numeric variables by gender:

```{r}
num_sum_gender <- mobile_behavior |>
  #group by first allows us to see for each gender
  group_by(Gender) |>
  summarise(across(where(is.numeric), 
    list(
      Min = ~min(. , na.rm = TRUE),
      Max = ~max(. , na.rm = TRUE),
      Mean = ~mean(. , na.rm = TRUE),
      Median = ~median(. , na.rm = TRUE),
      SD = ~sd(. , na.rm = TRUE),
      IQR = ~IQR(. , na.rm = TRUE)), 
      .names = "{.col}_{.fn}")) |>
  pivot_longer(cols = -Gender, names_to = c("Variable", ".value"), 
    names_sep = "_") |>
  slice(-c(1, 8))

num_sum_gender
```

#### by operating system

Calculate Min, Max, Mean, Median, SD, IQR for all numeric variables by OS:

```{r}
num_sum_sys <- mobile_behavior |>
  group_by(`Operating System`) |>
  summarise(across(where(is.numeric), 
    list(
      Min = ~min(. , na.rm = TRUE),
      Max = ~max(. , na.rm = TRUE),
      Mean = ~mean(. , na.rm = TRUE),
      Median = ~median(. , na.rm = TRUE),
      SD = ~sd(. , na.rm = TRUE),
      IQR = ~IQR(. , na.rm = TRUE)), 
      .names = "{.col}_{.fn}")) |>
  pivot_longer(cols = -`Operating System`, names_to = c("Variable", ".value"), 
               names_sep = "_") |>
  slice(-c(1, 8))

num_sum_sys
```

#### by \`User Behavior Class\`

```{r}
num_sum_behavior <- mobile_behavior |>
  group_by(`User Behavior Class`) |>
  summarise(across(where(is.numeric), 
    list(
      Min = ~min(. , na.rm = TRUE),
      Max = ~max(. , na.rm = TRUE),
      Mean = ~mean(. , na.rm = TRUE),
      Median = ~median(. , na.rm = TRUE),
      SD = ~sd(. , na.rm = TRUE),
      IQR = ~IQR(. , na.rm = TRUE)), 
      .names = "{.col}_{.fn}")) |>
  pivot_longer(cols = -`User Behavior Class`, names_to = c("Variable", ".value"), 
               names_sep = "_") |>
  slice(-c(1, 8))

num_sum_behavior
```

### Create Graphs

#### Histograms

create a base histogram for user behavior class facet

```{r}
#lets create a separate dataset so that we can pivotlonger without messing up the original dataset.
num_var_graphdat <- mobile_behavior |>
  select(`User Behavior Class`, 
         `App Usage Time (min/day)`, 
         `Screen On Time (hours/day)`, 
         `Battery Drain (mAh/day)`, 
         `Data Usage (MB/day)`) |>
  pivot_longer(cols = -`User Behavior Class`, 
               names_to = "numvar", 
               values_to = "value")

ggplot(num_var_graphdat, aes(x = `value`, fill = as.factor(`User Behavior Class`))) + geom_histogram(bins = 30, position = "identity", alpha = 0.7,color = "black") +
  facet_wrap(~ numvar, scales = "free") +
  labs(x = "Numeric Variables", y = "Frequency", fill = "User Behavior Class") +
  theme_minimal() +
  theme(legend.position = "top")
```

#### Boxplots

create boxplots for the operating system

```{r}
boxplot_var_graphdat <- mobile_behavior |>
  select(`Operating System`, 
         `App Usage Time (min/day)`, 
         `Screen On Time (hours/day)`, 
         `Battery Drain (mAh/day)`, 
         `Data Usage (MB/day)`) |>
  pivot_longer(cols = -`Operating System`, 
               names_to = "numvar", 
               values_to = "value")

#position dodge to view side by side
ggplot(boxplot_var_graphdat, aes(x = `value`, y = `numvar`, 
    fill = as.factor(`Operating System`))) +
  geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.6, 
    color = "black") + 
  facet_wrap(~ numvar, scales = "free") + 
  labs(x = "Frequency", y = "Numeric Variables", fill = "Operating System") + 
  theme_minimal() + theme(legend.position = "top") +
  scale_fill_manual(values = c("#78C257", "#555555")) + coord_flip()
```

#### corr matrix and corr plot

correlation matrix and plot

```{r}
cor_matrix <- mobile_behavior |>
  select(`App Usage Time (min/day)`, 
         `Screen On Time (hours/day)`, 
         `Battery Drain (mAh/day)`, 
         `Data Usage (MB/day)`) |>
  cor() |>
  corrplot(method = "circle", type = "upper", 
           tl.col = "red", tl.srt = 45, addCoef.col = "black", 
           col = colorRampPalette(c("cyan", "white", "salmon"))(200))
```

#### violin

violin plots

```{r}
violin_var_graphdat <- mobile_behavior |>
  select(`Gender`, 
         `App Usage Time (min/day)`, 
         `Screen On Time (hours/day)`, 
         `Battery Drain (mAh/day)`, 
         `Data Usage (MB/day)`) |>
  pivot_longer(cols = -`Gender`, 
               names_to = "numvar", 
               values_to = "value")


ggplot(violin_var_graphdat, aes(x = `value`, y = `numvar`, fill = as.factor(`Gender`))) +
  geom_violin(position = position_dodge(width = 0.75), alpha = 0.6, 
              color = "black") +
  facet_wrap(~ numvar, scales = "free") +
  labs(x = "Frequency", y = "Numeric Variables", fill = "Gender") +
  theme_minimal() +
  theme(legend.position = "top") +
  coord_flip()
```

#### Bar Graph

bar graphs for categorical

```{r}
ggplot(mobile_behavior, aes(x = `User Behavior Class`, fill = Gender)) +
  geom_bar(position = "stack") +
  labs(x = "User Behavior Class", y = "Frequency", fill = "Gender") +
  theme_minimal() +
  theme(legend.position = "top")
```

#### pie chart

pie chart for 1 categorical

```{r}
#label counts
pie_counts <- mobile_behavior |>
  group_by(AgeCat) |>
  summarise(counts = n(), .groups = 'drop')

ggplot(pie_counts, aes(x = "", y = counts, fill = factor(AgeCat))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +  
  labs(fill = "AgeCat") +
  theme_minimal() +
  theme(legend.position = "right")
```

#### Ridge Plot

ridge plot for 1 numeric 1 categorical

```{r}
  ggplot(mobile_behavior, aes(x = `App Usage Time (min/day)`, y = AgeCat, fill = AgeCat)) +
    geom_density_ridges(alpha = 0.7) +
    labs(x = "Numeric Variable",y = "AgeCat") +
    theme_minimal(base_size = 17) +
    theme(
      axis.title.x = element_text(size = 17), 
      axis.title.y = element_text(size = 17),
      axis.text.x = element_text(angle = 45, hjust = 1)
    )
```

#### Scatterplot

scatterplot for numerical

```{r}
ggplot(mobile_behavior, aes(x = `App Usage Time (min/day)`, y = `Screen On Time (hours/day)`)) +
  geom_point(alpha = 0.7, color = "blue") + 
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(x = "app usage", 
       y = "screen time", ) +
  theme_minimal(base_size = 17) +
  theme(axis.title.x = element_text(size = 17), 
        axis.title.y = element_text(size = 17),
        axis.text.x = element_text(angle = 45, hjust = 1))
```
